#%%
from osgeo import gdal
from pathlib import Path
from raster_processing import img_to_chips, nc_to_png
import shutil
import zipfile
import sys

sys.path.append(str(Path(__file__).parent.parent))
from configs import ml_config  # pylint: disable=import-error
from classes import SHO
from utils.common import clear


#%% Set up variables for next two cells
chip_size_orig = ml_config.CHIP_SIZE_ORIG
chip_size_reduced = ml_config.CHIP_SIZE_REDUCED
max_chip_qty = ml_config.MAX_CHIP_QTY
start_over = ml_config.START_OVER
overhang = ml_config.OVERHANG
cleanup = True
prods = [
    "S1A_IW_GRDH_1SDV_20200128T001658_20200128T001733_030993_038F42_D900",
]
path = Path(".")  # Set the location where the chips will be stored
# path = Path('/Volumes/OsmoExt/SkyTruth') # Jona's external harddrive

#%% Make chips from a GRD
chp_dir = path / "training/chp"
for pid in set(prods):
    img_path = path / pid / "vv_grd.tiff"
    sho = SHO(pid)
    if sho.grd:
        sho.download_grd_tiff_from_s3(img_path)
        mask_path = path / pid / "hand_edited_mask.png"
        gdal.Translate(
            str(mask_path),
            str(img_path),
            widthPct=chip_size_reduced / chip_size_orig * 100,
            heightPct=chip_size_reduced / chip_size_orig * 100,
            outputType=gdal.GDT_Byte,
        )  # Save a copy with reduced resolution while we have the file open!
        img_to_chips(
            img_path,
            chp_dir,
            chip_size_orig,
            chip_size_reduced,
            overhang,
            max_chip_qty,
            start_over,
            out_stem=pid,
        )
        if cleanup:
            clear(img_path)  # Delete the huge GRD

#%%  Make chips from a handmade mask
# XXX Before running this block, you must edit hand_edited_mask.png in photoshop to create a [0,1] mask
chp_dir = path / "training/lbl"
for pid in set(prods):
    img_path = path / pid / "hand_edited_mask.png"
    if img_path.exists():
        img_to_chips(
            img_path,
            chp_dir,
            chip_size_reduced,
            chip_size_reduced,
            overhang,
            max_chip_qty,
            start_over,
            True,
            out_stem=pid,
        )
        if cleanup:
            shutil.rmtree(
                str(img_path.parent)
            )  # Remove the folder holding the raw files

#%% Make chips from an OCN
bands = {  # from https://sentinel.esa.int/web/sentinel/ocean-wind-field-component
    "owiWindSpeed": {"min": 0.0, "max": 25.0, "no_data_in": -999.0, "no_data_out": 255},
    "owiWindDirection": {
        "min": 0.0,
        "max": 360.0,
        "no_data_in": -999.0,
        "no_data_out": 255,
    },
    "owiIncidenceAngle": {
        "min": 20.0,
        "max": 50.0,
        "no_data_in": 0.0,
        "no_data_out": 0.0,
    },
}

chp_dir = path / "training/ocn"
for pid in set(prods):
    sho = SHO(pid)
    if sho.grd and sho.ocn:
        # This section is just to get the target size that the OCN should be
        img_path = path / pid / "vv_grd.tiff"
        sho.download_grd_tiff_from_s3(img_path)
        grd = gdal.Open(str(img_path))
        target_size = (
            int(chip_size_reduced / chip_size_orig * grd.RasterXSize),
            int(chip_size_reduced / chip_size_orig * grd.RasterYSize),
        )
        del grd

        # This section downloads, scales, and chops up the OCN
        ocnzip_path = path / pid / "ocn.zip"
        sho.download_ocn(ocnzip_path)
        with zipfile.ZipFile(ocnzip_path, "r") as zip_ref:
            zip_ref.extractall(ocnzip_path.parent)
        nc_path = next(
            (ocnzip_path.with_name(sho.ocn.pid + ".SAFE") / "measurement").glob("*.nc")
        )  # Grab the first nc file (XXX assuming there will always be exactly 1)
        ocn_path = nc_to_png(nc_path, bands, target_size)
        img_to_chips(
            ocn_path,
            chp_dir,
            chip_size_orig,
            chip_size_reduced,
            overhang,
            max_chip_qty,
            start_over,
            out_stem=sho.grd_id,
        )

#%% Sorted list of products used to train the fastai2 model
prods = [
    #     "S1B_IW_GRDH_1SDV_20200422T032137_20200422T032206_21251_28542_2949",
    #     "S1A_IW_GRDH_1SDV_20200422T023108_20200422T023133_32234_03BA81_5FD7",
    #     "S1A_IW_GRDH_1SDV_20200421T050520_20200421T050545_32221_03BA14_00C3",
    #     "S1B_IW_GRDH_1SDV_20200421T041521_20200421T041546_21237_0284CF_821F",
    #     "S1A_IW_GRDH_1SDV_20200420T184149_20200420T184214_32215_03B9E0_D701",
    #     "S1A_IW_GRDH_1SDV_20200418T154154_20200418T154219_32184_03B8BB_C805",
    #     "S1A_IW_GRDH_1SDV_20200417T004901_20200417T004927_32160_03B7E4_1D7F",
    #     "S1B_IW_GRDH_1SDV_20200415T214319_20200415T214344_21160_28277_9105",
    #     "S1A_IW_GRDH_1SDV_20200415T115424_20200415T115449_32138_03B71A_5DBD",
    #     "S1A_IW_GRDH_1SDV_20200413T224702_20200413T224731_32115_03B64B_600F",
    #     "S1A_IW_GRDH_1SDV_20200412T180123_20200412T180148_32098_03B5B1_515A",
    #     "S1B_IW_GRDH_1SDV_20200412T154038_20200412T154103_21113_0280FD_E66A",
    #     "S1B_IW_GRDH_1SDV_20200411T163853_20200411T163918_21099_02808C_4551",
    #     "S1A_IW_GRDH_1SDV_20200411T044852_20200411T044917_32075_03B4E3_A385",
    #     "S1A_IW_GRDH_1SDV_20200410T182609_20200410T182634_32069_03B4B5_7DE2",
    #     "S1B_IW_GRDH_1SDV_20200410T173635_20200410T173704_21085_28009_900A",
    #     "S1B_IW_GRDH_1SDV_20200410T173635_20200410T173704_21085_28009_900A",
    #     "S1A_IW_GRDH_1SDV_20200407T034329_20200407T034354_32016_03B2D6_D260",
    #     "S1A_IW_GRDH_1SDV_20200406T194140_20200406T194205_32011_03B2AB_C112",
    #     "S1A_IW_GRDH_1SDV_20200405T022315_20200405T022340_31986_03B1C1_6BDE",
    #     "S1A_IW_GRDH_1SDV_20200404T063616_20200404T063641_31974_03B153_B4AA",
    #     "S1B_IW_GRDH_1SDV_20200404T040511_20200404T040536_20989_027D08_F20D",
    #     "S1B_IW_GRDH_1SDV_20200404T040511_20200404T040536_20989_027D08_F20D",
    #     "S1A_IW_GRDH_1SDV_20200403T023909_20200403T023934_31957_03B0B8_76CD",
    #     "S1A_IW_GRDH_1SDV_20200402T214948_20200402T215013_31954_03B0A3_9BFB",
    #     "S1A_IW_GRDH_1SDV_20200401T011853_20200401T011919_31927_03AFAC_E50D",
    #     "S1A_IW_GRDH_1SDV_20200326T215543_20200326T215608_31852_03AD13_14FA",
    #     "S1A_IW_GRDH_1SDV_20200326T053050_20200326T053115_31842_03ACB7_2AA8",
    #     "S1B_IW_GRDH_1SDV_20200325T035046_20200325T035111_20843_27861_F30B",
    #     "S1B_IW_GRDH_1SDV_20200324T062645_20200324T062710_20830_0277F3_1A19",
    #     "S1A_IW_GRDH_1SDV_20200323T105002_20200323T105027_31801_03AB47_3E55",
    #     "S1B_IW_GRDH_1SDV_20200322T160526_20200322T160551_20807_02774A_D9BD",
    #     "S1A_IW_GRDH_1SDV_20200321T232802_20200321T232832_31780_03AA81_6646",
    #     "S1A_IW_GRDH_1SDV_20200321T015855_20200321T015920_31767_03AA09_EF4A",
    #     "S1B_IW_GRDH_1SDV_20200319T153753_20200319T153822_020763_0275E8_3984",
    #     "S1A_IW_GRDH_1SDV_20200318T230214_20200318T230239_31736_03A900_47C1",
    #     "S1A_IW_GRDH_1SDV_20200315T224030_20200315T224055_31692_03A778_F12B",
    #     "S1A_IW_GRDH_1SDV_20200314T111604_20200314T111629_31670_03A6B0_CD3D",
    #     "S1A_IW_GRDH_1SDV_20200314T034008_20200314T034033_31666_03A682_0F6A",
    #     "S1A_IW_GRDH_1SDV_20200313T225459_20200313T225528_31663_03A666_F20C",
    #     "S1A_IW_GRDH_1SDV_20200311T213601_20200311T213626_31633_03A55E_D10F",
    #     "S1B_IW_GRDH_1SDV_20200311T040511_20200311T040536_20639_0271F7_997E",
    #     "S1A_IW_GRDH_1SDV_20200309T015855_20200309T015920_31592_03A3E9_40C5",
    #     "S1A_IW_GRDH_1SDV_20200307T112815_20200307T112840_31569_03A31D_D1F1",
    #     "S1B_IW_GRDH_1SDV_20200306T035921_20200306T035946_20566_026F9A_9BD8",
    #     "S1A_IW_GRDH_1SDV_20200303T075651_20200303T075710_31508_03A10F_29E2",
    #     "S1A_IW_GRDH_1SDV_20200302T215359_20200302T215428_31502_03A0D7_BFDF",
    #     "S1B_IW_GRDH_1SDV_20200302T043210_20200302T043235_20508_026DC6_4CF0",
    #     "S1B_IW_GRDH_1SDV_20200228T100639_20200228T100704_20468_026C7F_F878",
    #     "S1B_IW_GRDH_1SDV_20200227T214134_20200227T214203_20460_026C48_5EF8",
    #     "S1A_IW_GRDH_1SDV_20200226T215152_20200226T215217_031429_039E49_B0AE",
    #     "S1B_IW_GRDH_1SDV_20200226T101646_20200226T101715_20438_026B9C_54F0",
    #     "S1B_IW_GRDH_1SDV_20200225T233242_20200225T233310_20432_026B6A_F10B",
    #     "S1B_IW_GRDH_1SDV_20200223T180822_20200223T180847_20400_026A61_60DE",
    #     "S1A_IW_GRDH_1SDV_20200222T222419_20200222T222444_31371_039C53_4208",
    #     "S1A_IW_GRDH_1SDV_20200222T222419_20200222T222444_31371_039C53_4208",
    #     "S1B_IW_GRDH_1SDV_20200221T165529_20200221T165554_20370_26955_0F9A",
    #     "S1A_IW_GRDH_1SDV_20200219T053049_20200219T053114_31317_039A75_C477",
    #     "S1A_IW_GRDH_1SDV_20200217T221717_20200217T221742_31298_0399CA_0332",
    #     "S1B_IW_GRDH_1SDV_20200217T154841_20200217T154906_20311_26773_ED65",
    #     "S1B_IW_GRDH_1SDV_20200217T062710_20200217T062735_20305_26740_E3B6",
    #     "S1B_IW_GRDH_1SSV_20200215T105749_20200215T105817_20278_02667B_DC94",
    #     "S1A_IW_GRDH_1SDV_20200214T215049_20200214T215114_31254_03983F_8378",
    #     "S1B_IW_GRDH_1SDV_20200214T183318_20200214T183343_20269_26621_2FF4",
    #     "S1A_IW_GRDH_1SDV_20200213T193149_20200213T193218_31238_0397B3_0398",
    #     "S1A_IW_GRDH_1SDV_20200212T180123_20200212T180148_31223_03972C_E262",
    #     "S1A_IW_GRDH_1SDV_20200211T212649_20200211T212714_31210_0396D2_2D6D",
    #     "S1A_IW_GRDH_1SDV_20200211T104936_20200211T105001_31204_03968F_757F",
    #     "S1B_IW_GRDH_1SDV_20200211T035946_20200211T040011_20216_02646F_FEB4",
    #     "S1A_IW_GRDH_1SDV_20200211T013429_20200211T013452_31198_39653_168B",
    #     "S1A_IW_GRDH_1SDV_20200210T222419_20200210T222444_31196_03964D_A0A7",
    #     "S1B_IW_GRDH_1SDV_20200209T055335_20200209T055400_20188_02637F_8CF2",
    #     "S1A_IW_GRDH_1SDV_20200207T175246_20200207T175311_31150_0394AF_A63F",
    #     "S1B_IW_GRDH_1SDV_20200204T100525_20200204T100550_20118_26141_18FF",
    #     "S1A_IW_GRDH_1SDV_20200204T063616_20200204T063641_031099_0392E0_F24A",
    #     "S1B_IW_GRDH_1SDV_20200203T214318_20200203T214343_20110_02610A_9626",
    #     "S1B_IW_GRDH_1SDV_20200202T152638_20200202T152703_20092_02606E_046A",
    #     "S1A_IW_GRDH_1SDV_20200201T211115_20200201T211140_31064_0391A8_983F",
    #     "S1B_IW_GRDH_1SDV_20200201T033929_20200201T033954_20070_025FBD_297F",
    #     "S1B_IW_GRDH_1SDV_20200129T155616_20200129T155641_20034_025E7A_E89A",
    #     "S1A_IW_GRDH_1SDV_20200129T114310_20200129T114335_31015_038FFE_2C05",
    #     "S1A_IW_GRDH_1SDV_20200129T114245_20200129T114310_31015_038FFE_F3C2",
    #     "S1A_IW_GRDH_1SDV_20200128T001658_20200128T001733_30993_038F42_D900",
    #     "S1A_IW_GRDH_1SDV_20200128T001357_20200128T001423_30993_038F41_7BE6",
    #     "S1A_IW_GRDH_1SDV_20200126T175311_20200126T175336_030975_038E94_BAE3",
    #     "S1A_IW_GRDH_1SDV_20200126T175246_20200126T175311_030975_038E94_50A7",
    #     "S1A_IW_GRDH_1SDV_20200126T111655_20200126T111720_030970_038E72_9117",
    #     "S1B_IW_GRDH_1SDV_20200126T102454_20200126T102523_19986_025CF5_B32F",
    #     "S1A_IW_GRDH_1SDV_20200122T055401_20200122T055426_30909_038C36_8431",
    #     "S1A_IW_GRDH_1SDV_20200119T021530_20200119T021554_30863_038AA8_F530",
    #     "S1B_IW_GRDH_1SDV_20200118T053703_20200118T053732_19867_02592F_A811",
    #     "S1A_IW_GRDH_1SDV_20190616T050022_20190616T050047_27700_32067_A535",
    #     "S1A_IW_GRDH_1SDV_20190325T220854_20190325T220919_26500_02F7EB_CD1D",
    #     "S1A_IW_GRDH_1SDV_20190303T052237_20190303T052302_26169_02EBC9_9497",
    #     "S1A_IW_GRDH_1SDV_20190302T224655_20190302T224724_26165_02EBA8_686C",
    #     "S1A_IW_GRDH_1SDV_20190220T165541_20190220T165606_26016_02E64D_E8B3",
    #     "S1A_IW_GRDH_1SDV_20190212T053018_20190212T053043_25892_02E1E8_97AF",
    #     "S1A_IW_GRDH_1SDV_20190212T053018_20190212T053043_25892_02E1E8_97AF",
    #     "S1A_IW_GRDH_1SDV_20190211T103308_20190211T103338_025880_02E181_5EAE",
    #     "S1A_IW_GRDH_1SDV_20190202T142444_20190202T142509_25752_02DD07_9291",
    #     "S1B_IW_GRDH_1SDV_20190125T180112_20190125T180137_14654_01B506_FF79",
    #     "S1A_IW_GRDH_1SDV_20190116T231135_20190116T231200_25509_02D416_6D58",
    #     "S1B_IW_GRDH_1SDV_20190116T114133_20190116T114203_14519_01B0AF_CA8F",
    #     "S1B_IW_GRDH_1SDV_20190115T214141_20190115T214206_14510_01B06F_F9AA",
    #     "S1A_IW_GRDH_1SDV_20190110T222414_20190110T222439_25421_02D0E4_9308",
    #     "S1B_IW_GRDH_1SDV_20190109T100924_20190109T100949_14415_01AD5C_0F1B",
    #     "S1A_IW_GRDH_1SDV_20190107T220103_20190107T220128_25377_02CF52_590C",
    #     "S1A_IW_GRDH_1SDV_20190107T220038_20190107T220103_25377_02CF52_7027",
    #     "S1A_IW_GRDH_1SDV_20190107T220013_20190107T220038_25377_02CF52_E15E",
    #     "S1A_IW_GRDH_1SDV_20190107T175305_20190107T175330_25375_02CF39_85AB",
    #     "S1A_IW_GRDH_1SDV_20190107T003121_20190107T003146_25364_02CEDA_F4D9",
    #     "S1A_IW_GRDH_1SDV_20190106T225613_20190106T225638_25363_02CED2_BCF8",
    #     "S1A_IW_GRDH_1SDV_20190106T184944_20190106T185013_25360_02CEB8_5600",
    #     "S1A_IW_GRDH_1SDV_20190105T221712_20190105T221737_25348_02CE45_53F2",
    #     "S1B_IW_GRDH_1SDV_20190104T100635_20190104T100700_14343_01AAFE_7570",
    #     "S1A_IW_GRDH_1SDV_20190101T193354_20190101T193421_25288_02CC18_DB4C",
]

# %%
